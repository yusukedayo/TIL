### 今日の目標
* Practice webの基本を終了させる。
* Practice gitを終了させる。


###今日の積み上げ
##### ・ruby webrick.rbとエラーに対する対処の考え方。
webrickはrubyで簡単にサーバーを作ることのできるgemである。しかし、gemをインストールしてコードを書くだけでは
サーバーは立ち上がらない。コマンドにおいてruby  webrick.rbを入力することでサーバーが起動される。
そのことに気づかずにnot fund errorで多くの時間を無駄にしてしまった。今回出ていた404エラー（Not Found）は、すでに削除されたページや、間違ったURLにアクセスした際に表示されるエラー
であるからURLの表記とコードに間違いが見つからなければ正常にサーバーが動いているのかを確認するべきでああった。
なぜなら、サイトはwebブラウザからHTTPリクエストを送りwebサーバーが変更を返すのでブラウザ側に問題がなければサーバーを疑うべきであるから。
webの基本仕組みを理解したうえで原因がどの段階で起こっているのかを考えるとエラーの解決に役立つかもしれない。

##### ・formについて
すべてのフォームは、以下のように <form> 要素から始まります:
<form action="/my-handling-form-page" method="post"></form>
すべての属性は省略可能ですが、少なくとも action 属性と method属性は常に設定することがベストプラクティスであると考えられます。
action 属性は、フォームで収集したデータを送信すべき場所 (URL) を定義します
method 属性は、データを送信するために使用する HTTP メソッド ( get または post ) を定義します

### ・labelとinputとtextareaについて
  <li>
    <label for="mail">E-mail:</label>
    <input type="email" id="mail" name="user_email">
 </li>
<label>とは
「LABEL」とは、フォームの中でフォームの項目名と構成部品（チェックボックス、ラジオボタンなど）を関連付けるためのタグです。
<input> 要素でもっとも重要な属性は、type 属性です。この属性は <input> 要素の見た目や動作を定義するため、とても重要です。
<input/text> という値を使用しています (これは属性の既定値であり、制御や検証を行わずあらゆるテキストを受け入れる、単一行のテキストフィールドを表します) 。
正しくフォーマットされた E メールアドレスのみを受け付ける単一行として定義された <input/email> という値を使用しています。
<textarea>とは
「TEXTAREA」とは、複数行の入力が可能な入力欄を作成するためのタグです。
<textarea>～</textarea>内に入力されたテキストは、入力フィールドの初期値として入力欄に表示されます。

### ・ボタン要素について
<button> 要素は type 属性を受け付けます。3 種類の値を受け付けて、これは submit、reset、button です。
以下のコードはsubmitでsubmit ボタンをクリックするとフォームのデータを、<form> 要素の action 属性で定義した ウェブページへ送信します。

<li class="button">
  <button type="submit">メッセージを送信</button>
</li>
参考記事
https://developer.mozilla.org/ja/docs/Learn/Forms/Your_first_form











