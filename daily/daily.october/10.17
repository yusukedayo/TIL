### 今日やること
* paiza Cランクメニューの残り
https://paiza.jp/works/mondai/c_rank_level_up_problems/problem_index?language_uid=ruby
* じゃんけん課題他の人のをコードリーディング
* practice curl
* 現場rails chapter3の復習 (CRUD機能にの実装について原理を自分で説明できるようになる)
* 現場rails chapter4の復習 




---標準入力FINAL-----------------------------------------------------------------------------------------------
***入力***
1
Yamada 30
***出力***
Yamada 31
---自分の答案-------------------------------------------------------------------------------------------------
n = gets.to_i
arr = Array.new(n)
n.times do |x| 
  arr[x] = gets.chomp.split(" ")
  age  = arr[x][1].to_i + 1
  name = arr[x][0]
end
puts  "#{name + " " + age}"
---回答-------------------------------------------------------------------------------------------------------
n = gets.to_i
roster = Array.new(n)
n.times { |i| roster[i] = gets.split(' ') }
roster.each do |member|
  name = member[0]
  age = member[1].to_i
  puts name + ' ' + (age + 1).to_s
end
---得られた学びpoint-----------------------------------------------------------------------------------------------
* 変数のスコープについて
そもそも変数は以下の３種類に分けられそれぞれでスコープが異なる。
1,ローカル変数…スコープは定義されたメソッドの中でのみ使用可能
def test
 name = "tanaka"
end
p test => tanakaが表示される。
p name => エラーが発生する。
2,インスタンス変数…同じオブジェクト内であればどこでも使用可能
インスタンス毎に値を持てる
class Test
  def initialize(name)
    @name = name     #インスタンス変数を定義
  end

  def puts_name
    puts @name
  end
end
3,クラス変数…スコープは、クラス内ならどこでも使用可能
インスタンス変数はインスタンス毎に値を持てるが、クラス変数はクラス内で1つの値を持つ
class Test
  def initialize(name)
    @@name = name     #クラス変数を定義
  end

  def puts_name
    puts @@name
  end
end

* 文字列に変数を組み込む方法について
ローカル変数をそのまま代入したいときは特別に付け足すものはない。
order = "カフェラテ"
puts "注文は" + order  => 注文はカフェラテが出力される。
計算した結果を文字列に代入したい場合
puts = "お会計は#{100 * 0.1}円です。 => 計算結果が文章に代入される。
また、#{}は変数にも使うことができ
order = "カフェラテ"
puts "ご注文は#{order}ですね"とすることで変数を代入した文章が出力される。
puts "注文は" + order この書き方よりもシンプルに書くことができる。


---どこの問題-----------------------------------------------------------------------------------------------
***入力***
2134
***出力***
64
---自分の答案-------------------------------------------------------------------------------------------------

---回答-------------------------------------------------------------------------------------------------------
s = gets
a = s[0].to_i + s[3].to_i
b = s[1].to_i + s[2].to_i
puts a.to_s + b.to_s
---得られた学びpoint-----------------------------------------------------------------------------------------------
文字列[i] で 文字列 のインデックス i の文字を取得できる。




https://paiza.jp/works/mondai/reviews/show/5334efa8ca82260af34aea813a31144d