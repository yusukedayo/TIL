### 今日やること
* じゃんけんプログラム修正 ●
* practice課題の修正 ●
* paiza Cランクメニューの残り
https://paiza.jp/works/mondai/c_rank_level_up_problems/problem_index?language_uid=ruby
* じゃんけん課題他の人のをコードリーディング
* 現場rails chapter 7
* 現場rails chapter3の復習 
* 現場rails chapter4の復習 

---標準入出力STEP6--------------------------------------------------------------------------------------------
***入力***
2
1 5
***出力***
1
5
---自分の答案-------------------------------------------------------------------------------------------------
n = gets.to_i
arr = Array.new(n)
n.times do |x|
    arr[x] = gets.to_i
end
puts arr
---回答--------------------------------------------------------------------------------------------------------
n = gets.to_i
a = gets.split(' ').map(&:to_i)
puts a
---得られた学びpoint-----------------------------------------------------------------------------------------------
* puts 配列 のように書くと 配列 の各要素を改行区切りで出力することができます
* .spilitメソッドで指定の分け方で配列化させれるからわざわざArry.newする必要はなかった。
* 今回の自分の回答には半角スペース開けて入力するって要素が入ってなかった。
ちゃんと要件通りに操作しようと考えたら答えに近づけるかも。



---標準入出力FINAL-----------------------------------------------------------------------------------------------
***入力***
1
Yamada 30
***出力***
Yamada 31

---自分の答案-------------------------------------------------------------------------------------------------
n = gets.to_i
n.times do |x|
a = gets.chomp.split(" ")
a[1] = a[1].to_i + 1
2.times do |x|
    p a[x]
end
end
---回答-------------------------------------------------------------------------------------------------------
n = gets.to_i
roster = Array.new(n)
n.times { |i| roster[i] = gets.split(' ') }
roster.each do |member|
  name = member[0]
  age = member[1].to_i
  puts name + ' ' + (age + 1).to_s
end
---得られた学びpoint-----------------------------------------------------------------------------------------------
* timesメソッドについて
数値オブジェクト.times do |変数|
  # 繰り返す処理
end
# 処理が1行で収まる場合は、以下でもよい
数値オブジェクト.times { |変数|  処理 }
変数の中には0~指定回数までの数が入り、今何回目の処理が行われているかを表す。だから配列の要素に入れる時に便利。
* 配列.each do |menber|の形だと配列の要素を１つずつmenberに代入して処理を行う。


---文字列STEP1-----------------------------------------------------------------------------------------------
***入力***
3
1
12
123
***出力***
1
2
3
---自分の答案-------------------------------------------------------------------------------------------------
n = gets.to_i
n.times { puts gets.length }
---回答-------------------------------------------------------------------------------------------------------
n = gets.to_i
n.times { puts gets.chomp.length }
---得られた学びpoint-----------------------------------------------------------------------------------------------
* 入力値の最後に改行が入っている場合、gets で取得する文字列の末尾に \n という改行文字が入ってしまう。
改行文字を取り除くために String クラスの chomp メソッドを gets.chompを使います。
chomp メソッドは文字列末尾にある改行文字を削除した新しい文字列を返します。







---どこの問題-----------------------------------------------------------------------------------------------
***入力***

***出力***

---自分の答案-------------------------------------------------------------------------------------------------

---回答-------------------------------------------------------------------------------------------------------

---得られた学びpoint-----------------------------------------------------------------------------------------------






* formに関するまとめをしてくれている記事
https://tech-essentials.work/course_outputs/201

